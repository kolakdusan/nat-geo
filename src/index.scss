@use 'sass:math';

// #region Tailwind
@tailwind base;
@tailwind components;
@tailwind utilities;
// #endregion
// #region Base

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  @apply bg-black text-white;
}

// #endregion

$base-transition: 0.5s;
$VISIBLE_IMG_COUNT: 7;

#container {
  @apply border-2 mt-28 flex items-center justify-center relative;
}

#carousel {
  @apply border-2 border-red-500 h-full flex
    justify-center items-center overflow-x-scroll;
  position: relative;
  overflow: visible;
  width: auto;
}

#carousel img {
  position: absolute;
  height: 575px;
  transition: all 0s ease;

  &.base {
    position: relative;
    opacity: 0;
  }

  &.scrollLeft,
  &.scrollRight {
    transition: all $base-transition ease;
  }

  &.middle {
    // position: absolute;
    z-index: 103;
    transform: translateX(0);
    &.scrollLeft {
      transform: translateX(45%);
      height: 500px;
    }
    &.scrollRight {
      transform: translateX(-45%);
      height: 500px;
    }
  }

  &.left1 {
    transform: translateX(-45%);
    z-index: 102;
    height: 500px;
    &.scrollLeft {
      height: 575px;
      transform: translateX(0%);
    }
    &.scrollRight {
      height: 425px;
      transform: translateX(-90%);
    }
  }

  &.left2 {
    transform: translateX(-90%);
    z-index: 101;
    height: 425px;
    &.scrollLeft {
      height: 500px;
      transform: translateX(-45%);
    }
    &.scrollRight {
      height: 375px;
      transform: translateX(-135%);
      opacity: 0;
    }
  }

  &.left3 {
    opacity: 0;
    transform: translateX(-135%);
    height: 350px;
    &.scrollLeft {
      transform: translateX(-90%);
      height: 425px;
      opacity: 1;
    }
  }

  &.right1 {
    transform: translateX(45%);
    z-index: 102;
    height: 500px;
    &.scrollLeft {
      height: 425px;
      transform: translateX(90%);
    }
    &.scrollRight {
      transform: translateX(0);
      height: 575px;
    }
  }

  &.right2 {
    z-index: 101;
    transform: translateX(90%);
    height: 425px;
    &.scrollLeft {
      height: 375px;
      transform: translateX(135%);
      opacity: 0;
    }
    &.scrollRight {
      transform: translateX(45%);
      height: 500px;
    }
  }

  &.right3 {
    opacity: 0;
    transform: translateX(135%);
    height: 350px;
    &.scrollRight {
      transform: translateX(90%);
      height: 425px;
      opacity: 1;
    }
  }

  @keyframes animateMiddleToLeft {
  }
}

#ghost-carousel {
  @apply border-2 border-red-500 h-full flex justify-center
    items-center overflow-x-scroll;
  position: relative;
  overflow: visible;
  width: auto;
}

#ghost-carousel img {
  position: absolute;
  height: 575px;
  transition: all 0s ease;
  opacity: 0;

  &.scrollLeft,
  &.scrollRight {
    transition: all $base-transition ease, opacity $base-transition ease;
  }

  &.left1 {
    transform: translateX(-45%);
    z-index: 110;
    height: 500px;

    &.scrollLeft {
      height: 575px;
      transform: translateX(0%);
      opacity: 1;
    }
    &.scrollRight {
      height: 425px;
      transform: translateX(-90%);
    }
  }

  &.right1 {
    transform: translateX(45%);
    z-index: 110;
    height: 500px;
    &.scrollLeft {
      height: 425px;
      transform: translateX(90%);
    }
    &.scrollRight {
      transform: translateX(0);
      height: 575px;
      opacity: 1;
    }
  }
}

$surroundingElementsOffsetIdx: floor(math.div($VISIBLE_IMG_COUNT, 2));

// @for $i
//   from (-$surroundingElementsOffsetIdx)
//   through ($surroundingElementsOffsetIdx)
// {
//   @debug #{$i};
//   .dupe:nth-of-type(#{$i}) {
//     display: none;
//   }
// }

@debug 'break';

.parent2 {
  @apply border-2 mt-28 flex items-center justify-center relative;
}

.parent {
  @apply border-2 border-red-500 flex
  justify-center items-center overflow-x-scroll;

  position: relative;
  overflow: visible;
  width: auto;

  .base {
    height: 575px;
    opacity: 0.3;
    position: relative;
  }
}

.dupe {
  position: absolute;
  transition: all 0s ease;
}

$halfVisibleImgCount: floor(math.div($VISIBLE_IMG_COUNT, 2));
$middleIdx: 4;
@for $i from 1 through $VISIBLE_IMG_COUNT {
  $relativeIdx: $i - $halfVisibleImgCount - 1;
  $initialHeight: 575px;
  $heightStep: 75px;
  $translateStep: 45%;

  .dupe:nth-of-type(#{$i}) {
    z-index: (103 - math.abs($relativeIdx));
    height: $initialHeight - math.abs($relativeIdx * $heightStep);
    transform: translateX(0 + $relativeIdx * $translateStep);
  }

  @if $i == 1 or $i == $VISIBLE_IMG_COUNT {
    // @debug $relativeIdx;
    .dupe:nth-of-type(#{$i}) {
      opacity: 0;
    }
  }
  .parent {
    &.scrollLeft .dupe:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep + $translateStep);
      height: $initialHeight - math.abs(($relativeIdx + 1) * $heightStep);

      @if $i == 1 {
        opacity: 1;
      }

      @if $i == $VISIBLE_IMG_COUNT - 1 {
        opacity: 0;
      }
    }

    &.scrollRight .dupe:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep - $translateStep);
      height: $initialHeight - math.abs(($relativeIdx - 1) * $heightStep);

      @if $i == $VISIBLE_IMG_COUNT {
        opacity: 1;
      }

      @if $i == 2 {
        opacity: 0;
      }
    }
  }
}

.ghost-parent {
  @apply border-2 border-red-500 h-full flex justify-center
  items-center overflow-x-scroll;
  position: relative;
  overflow: visible;
  width: auto;

  img {
    position: absolute;
    height: 500px;
    transition: all 0s ease;
    opacity: 0;
    z-index: 1000;
  }
  &.scrollLeft,
  &.scrollRight {
    img {
      transition: all $base-transition ease, opacity $base-transition ease !important;
    }
  }
  &.scrollLeft {
    .ghost-dupe:nth-of-type(1) {
      height: 575px;
      transform: translateX(0%);
      opacity: 1;
    }
  }

  &.scrollRight {
    .ghost-dupe:nth-of-type(2) {
      height: 575px;
      transform: translateX(0%);
      opacity: 1;
    }
  }

  .ghost-dupe:nth-of-type(1) {
    transform: translateX(-45%);
  }
  .ghost-dupe:nth-of-type(2) {
    transform: translateX(45%);
  }
}
