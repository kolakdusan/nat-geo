// #region scss
@use 'sass:math';
// #endregion
// #region Tailwind
@tailwind base;
@tailwind components;
@tailwind utilities;
// #endregion
// #region Base

:root {
  --swiper-theme-color: white !important;
  --swiper-preloader-color: white !important;
  --swiper-wrapper-transition-timing-function: initial;
}

@font-face {
  font-family: GeographLight;
  src: url(./assets/fonts/geographeditwebregular.ttf) format('truetype');
}

@font-face {
  font-family: Geograph;
  src: url(./assets/fonts/geographeditwebbold.ttf) format('truetype');
}

.fontLight {
  font-family: GeographLight, Arial, Helvetica, sans-serif;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.active {
  transition: all 0.5s ease, padding 0s ease;
}

html,
body {
  overflow-x: hidden;
}

body {
  @apply bg-black text-white;
  font-family: Geograph, Arial, Helvetica, sans-serif;
}

.not-selectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// #endregion

$all-transition: 0.5s;

$base-transition: $all-transition;
$opacity-transition: 0.3s;
$filter-transition: $all-transition;

$VISIBLE_IMG_COUNT: 7;
$halfVisibleImgCount: floor(math.div($VISIBLE_IMG_COUNT, 2));
$brightnessStep: 30;

.carousel-wrapper {
  @apply relative mt-16;
}

.carousel-container {
  @apply relative w-full h-screen mx-auto flex justify-center items-center;
  @apply w-[800px];

  .carousel-item {
    @apply absolute brightness-100 transition-all duration-0 ease-in-out;
    aspect-ratio: 3 / 4;
  }

  // @apply border-2 border-red-500;
  // width: calc((575px * 3 / 4) + (500px * 3 / 4));
}

$initialHeight: 575px;
$heightStep: 75px;
$translateStep: 45%;

@for $i from 1 through $VISIBLE_IMG_COUNT {
  $relativeIdx: $i - $halfVisibleImgCount - 1;
  .carousel-item:nth-of-type(#{$i}) {
    z-index: (103 - math.abs($relativeIdx));
    height: $initialHeight - math.abs($relativeIdx * $heightStep);
    transform: translateX(0 + $relativeIdx * $translateStep);
    filter: brightness(100% - math.abs($relativeIdx * $brightnessStep));
  }

  @if $i == 1 or $i == $VISIBLE_IMG_COUNT {
    .carousel-item:nth-of-type(#{$i}) {
      opacity: 0;
    }
  }

  @if $i != $halfVisibleImgCount + 1 {
    .carousel-container .carousel-item:nth-child(#{$i}) .watch-now-btn-wrapper {
      pointer-events: none;
    }
  }

  .carousel-container {
    &.scrollLeft .carousel-item:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep + $translateStep);
      height: $initialHeight - math.abs(($relativeIdx + 1) * $heightStep);
      filter: brightness(100% - math.abs(($relativeIdx + 1) * $brightnessStep));

      @if $i == 1 {
        opacity: 1;
      }

      @if $i == $VISIBLE_IMG_COUNT - 1 {
        opacity: 0;
      }
    }

    &.scrollRight .carousel-item:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep - $translateStep);
      height: $initialHeight -
        math.abs(($relativeIdx - 1) * $heightStep) !important;
      filter: brightness(100% - math.abs(($relativeIdx - 1) * $brightnessStep));

      @if $i == $VISIBLE_IMG_COUNT {
        opacity: 1;
      }

      @if $i == 2 {
        opacity: 0;
      }
    }
  }
}

.chevron {
  @apply text-6xl text-white px-10 py-3 z-[1000] absolute;
}

// ALLLLLLLAAAAAAAAA

@property --dukica {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 60%;
}

@property --dukica2 {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 60%;
}

.containerGGG {
  @apply w-full relative h-screen flex justify-center items-center;
  // z-index: 10000000;
  z-index: 3000;
  // @apply border-2 border-red-500;
  width: calc((575px * 3 / 4) + (500px * 3 / 4));
  .coverGGG {
    position: absolute;
    filter: brightness(100%);
    transition: all 0s ease;
    aspect-ratio: 3 / 4;

    // novo

    // mask-image: linear-gradient(
    //   90deg,
    //   transparent 0%,
    //   transparent var(--dukica),
    //   black var(--dukica2)
    // );
  }
}
img {
  max-width: 100%;
  // display: none;
}

@for $i from 1 through $VISIBLE_IMG_COUNT {
  $relativeIdx: $i - $halfVisibleImgCount - 1;
  $initialHeight: 575px;
  $heightStep: 75px;
  $translateStep: 45%;
  .coverGGG:nth-of-type(#{$i}) {
    z-index: (103 - math.abs($relativeIdx));
    height: $initialHeight - math.abs($relativeIdx * $heightStep);
    transform: translateX(0 + $relativeIdx * $translateStep);
    filter: brightness(100% - math.abs($relativeIdx * $brightnessStep));
  }

  @if $i == 1 or $i == $VISIBLE_IMG_COUNT {
    .coverGGG:nth-of-type(#{$i}) {
      opacity: 0;
    }
  }

  @if $i != $halfVisibleImgCount + 1 {
    .containerGGG .coverGGG:nth-child(#{$i}) .watch-now-btn-wrapper {
      pointer-events: none;
    }
  }

  @if $i != $halfVisibleImgCount + 2 {
    .coverGGG:nth-of-type(#{$i}) {
      opacity: 0;
    }
  } @else {
    .coverGGG:nth-of-type(#{$i}) {
      // filter: invert(100%);
      opacity: 0;
    }
  }

  .containerGGG {
    &.scrollLeft .coverGGG:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep + $translateStep);
      height: $initialHeight - math.abs(($relativeIdx + 1) * $heightStep);
      filter: brightness(100% - math.abs(($relativeIdx + 1) * $brightnessStep));
    }

    &.scrollRight .coverGGG:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep - $translateStep);
      height: $initialHeight -
        math.abs(($relativeIdx - 1) * $heightStep) !important;
      filter: brightness(100% - math.abs(($relativeIdx - 1) * $brightnessStep));
    }
    @keyframes dule-animate {
      0% {
        --dukica: 60%;
        --dukica2: 60%;
      }
      20% {
        --dukica: 30%;
        --dukica2: 60%;
      }
      100% {
        --dukica: 0%;
        --dukica2: 0%;
      }
    }
    @if $i == $halfVisibleImgCount + 2 {
      &.scrollRight .coverGGG:nth-of-type(#{$i}) {
        opacity: 1;
        animation: dule-animate 0.15s forwards ease-in-out;
      }
    }

    @if $i == $halfVisibleImgCount {
      &.scrollLeft .coverGGG:nth-of-type(#{$i}) {
        opacity: 1;
        animation: dule-animate 1s forwards ease;

        // display: none;
      }
    }
  }
}

$mainColor: #ffd700;

.subscribezz {
  @apply transition-all duration-300 ease-in-out cursor-pointer;

  &:hover {
    @apply text-black;

    .lineSubscribe {
      @apply h-[115%];
    }
  }
}

.lineSubscribe {
  @apply absolute bottom-[-2px] left-[-1px] w-[95%] h-[2px] bg-[#ffd700] z-[-5] transition-all duration-300 ease-in-out;
}

// #root {
//   height: 100vh;
//   width: 100wv;
//   overflow-x: hidden;
//   overflow-y: auto;
//   // margin-top: 100px;
//   padding-right: 5px;
// }

// html {
//   overflow: hidden !important ;
// }

// Scrolbar padding stuff

// inserted to fix
// html,
// body {
//   overflow-x: hidden;
//   scrollbar-gutter: stable;
//   @apply tracking-[0.5px];
// }

// html {
//   height: initial !important;
// }

//stopping insertion

// html,
// body {
//   position: relative;
//   height: 100vh;
//   width: 100wv;
// }

// html {
//   scrollbar-gutter: auto !important;
//   overflow-x: hidden !important;
//   width: 100vw;
//   // margin-right: calc(100vw - 100%);
//   padding-left: calc(100vw - 100%);
// }

// body {
//   position: relative;
//   padding-left: 17px;
//   width: calc(100vw - 17px);
// }

// #root {
//   padding-left: calc(100vw - 100%);
// }
.sample-slider {
  width: 70%;
  position: static !important;
  display: grid !important;
}
.sample-slider [class^='swiper-button-'] {
  inset: initial;
  margin: 0;
  align-self: center;
}
.sample-slider .swiper-button-prev {
  justify-self: start;
  margin-left: -40px;
  width: 10px !important;
  height: 10px !important;
}
.sample-slider .swiper-button-next {
  justify-self: end;
  margin-right: -45px;
}
.sample-slider .swiper-pagination {
  inset: initial !important;
  align-self: end;
  justify-self: center;
  margin-bottom: -40px;
}
.sample-slider img {
  width: 100%;
}

.sample-slider [class^='swiper-button-']::after {
  font-size: 20px;
}

.swiper-button-disabled {
  visibility: hidden;
}
