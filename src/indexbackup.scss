// #region scss
@use 'sass:math';
// #endregion
// #region Tailwind
@tailwind base;
@tailwind components;
@tailwind utilities;
// #endregion
// #region Base

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  @apply bg-black text-white;
}

// #endregion

$base-transition: 0.5s;
$VISIBLE_IMG_COUNT: 7;
$halfVisibleImgCount: floor(math.div($VISIBLE_IMG_COUNT, 2));
$brightnessStep: 30;

.container {
  @apply w-full h-screen flex justify-center items-center;
  // @apply border-2 border-red-500;
  position: relative;

  .cover {
    position: absolute;
    transition: all 0s ease;
  }

  .ghost-cover {
    position: absolute;
    height: 500px;
    transition: all 0s ease;
    opacity: 0;
    z-index: 1000;
    filter: brightness(100% - $brightnessStep);
    &.left {
      transform: translateX(-45%);
    }

    &.right {
      transform: translateX(45%);
    }
  }

  &.scrollLeft,
  &.scrollRight {
    .ghost-cover {
      transition: all $base-transition ease,
        opacity $base-transition - 0.3s ease, filter 0.1s ease !important;
      height: 575px;
    }
  }

  &.scrollLeft {
    .ghost-cover.left {
      transform: translateX(0%);
      filter: brightness(100%);

      opacity: 1;
    }
  }

  &.scrollRight {
    .ghost-cover.right {
      transform: translateX(0%);
      filter: brightness(100%);

      opacity: 1;
    }
  }
}

@for $i from 1 through $VISIBLE_IMG_COUNT {
  $relativeIdx: $i - $halfVisibleImgCount - 1;
  $initialHeight: 575px;
  $heightStep: 75px;
  $translateStep: 45%;
  .cover:nth-of-type(#{$i}) {
    z-index: (103 - math.abs($relativeIdx));
    height: $initialHeight - math.abs($relativeIdx * $heightStep);
    transform: translateX(0 + $relativeIdx * $translateStep);
    filter: brightness(100% - math.abs($relativeIdx * $brightnessStep));
  }

  @if $i == 1 or $i == $VISIBLE_IMG_COUNT {
    // @debug $relativeIdx;
    .cover:nth-of-type(#{$i}) {
      opacity: 0;
    }
  }
  .container {
    &.scrollLeft .cover:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep + $translateStep);
      height: $initialHeight - math.abs(($relativeIdx + 1) * $heightStep);
      filter: brightness(100% - math.abs(($relativeIdx + 1) * $brightnessStep));

      @if $i == 1 {
        opacity: 1;
      }

      @if $i == $VISIBLE_IMG_COUNT - 1 {
        opacity: 0;
      }
    }

    &.scrollRight .cover:nth-of-type(#{$i}) {
      transition: all $base-transition ease;
      transform: translateX(0 + $relativeIdx * $translateStep - $translateStep);
      height: $initialHeight - math.abs(($relativeIdx - 1) * $heightStep);
      filter: brightness(100% - math.abs(($relativeIdx - 1) * $brightnessStep));

      @if $i == $VISIBLE_IMG_COUNT {
        opacity: 1;
      }

      @if $i == 2 {
        opacity: 0;
      }
    }
  }
}

button {
  @apply text-5xl text-white px-10 py-3 z-[1000] absolute;
}
